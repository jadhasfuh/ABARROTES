CREATE DATABASE Abarrotes
USE Abarrotes
DROP DATABASE Abarrotes

--------------------------------------------------------
		FRAGMENTO DE VENTAS
--------------------------------------------------------
CREATE TABLE EMPLEADOS (
  CVEMP INT PRIMARY KEY,
  NOMEMP VARCHAR(50) NOT NULL,
  DIREMP VARCHAR(20) NOT NULL,
  TELEMP VARCHAR(15) NOT NULL,
  EDADEMP INT NOT NULL,
  PUESTO ENUM('ADMINISTRADOR', 'ENCARGADO'),
  ACTIVO INT
);

INSERT INTO EMPLEADOS (CVEMP, NOMEMP, DIREMP, TELEMP, EDADEMP, PUESTO, ACTIVO) VALUES (1, 'Adrian Ceja Renteria', 'Romero Flores #581', "5323126", 20, "ADMINISTRADOR", 1);
INSERT INTO EMPLEADOS (CVEMP, NOMEMP, DIREMP, TELEMP, EDADEMP, PUESTO, ACTIVO) VALUES (2, 'Fernando Damian Ceja Renteria', 'Romero Flores #581', "5323126", 14, "ADMINISTRADOR", 1);
INSERT INTO EMPLEADOS (CVEMP, NOMEMP, DIREMP, TELEMP, EDADEMP, PUESTO, ACTIVO) VALUES (3, 'Jesus Ramiro Ceja Renteria', 'Romero Flores #581', "5323126", 22, "ADMINISTRADOR", 1);
SELECT * FROM EMPLEADOS

CREATE TABLE VENTAS (
  CVEVTA INT PRIMARY KEY,
  SUBTOTAL DECIMAL DEFAULT(0),
  FORAHORRO DECIMAL DEFAULT(0),
  FECHAVTA DATE DEFAULT(CURRENT_DATE)
) 

CREATE TABLE USUARIOS (
  CVEMP INT,
  NUSUARIO VARCHAR (10) UNIQUE NOT NULL,
  CONTRASENA VARCHAR (12) UNIQUE NOT NULL,
  SESION INT DEFAULT (0) NOT NULL,
  CONSTRAINT `fk_usuarios_empleados`
    FOREIGN KEY (CVEMP) REFERENCES EMPLEADOS (CVEMP)
) 

INSERT INTO USUARIOS (CVEMP, NUSUARIO, CONTRASENA) VALUES (1, 'adrian', 'plastilina');
INSERT INTO USUARIOS (CVEMP, NUSUARIO, CONTRASENA) VALUES (2, 'fernando', 'plastilina1');
INSERT INTO USUARIOS (CVEMP, NUSUARIO, CONTRASENA) VALUES (3, 'ramiro', 'plastilina2');
SELECT * FROM USUARIOS

CREATE TABLE DETVTAEMP (
  CVEVTA INT,
   CONSTRAINT `fk_cvevta_ventas` FOREIGN KEY (CVEVTA) REFERENCES VENTAS (CVEVTA),
  CVEMP INT,
  CONSTRAINT `fk_cvevta_empleados` FOREIGN KEY (CVEMP) REFERENCES EMPLEADOS (CVEMP)
) 

CREATE TABLE DETVTAPRO (
  PREVENDIDOP DECIMAL DEFAULT(0),
  PRECOMPP DECIMAL DEFAULT(0),
  CANTVP INT NOT NULL,
  CVEVTA INT,
   CONSTRAINT `fk_detv_ventas` FOREIGN KEY (CVEVTA) REFERENCES VENTAS (CVEVTA),
  CVEPROD INT,
   CONSTRAINT `fk_detv_productos` FOREIGN KEY (CVEPROD) REFERENCES PRODUCTOS (CVEPROD)
) 

--------------------------------------------------------
--			SECCION DE COMPRAS
--------------------------------------------------------
CREATE TABLE PROVEEDORES (
  CVEPROV INT PRIMARY KEY,
  NOMPROV VARCHAR(50) NOT NULL,
  EMPRESA VARCHAR(30) NOT NULL,
  DIRPROV VARCHAR(50),
  DIREMPSA VARCHAR(50) NOT NULL,
  TELPROV VARCHAR(15) NOT NULL,
  ESTADO VARCHAR(20) NOT NULL,
  CODIGOP VARCHAR(8) NOT NULL,
  LOCALIDAD VARCHAR(30) NOT NULL,
  CORREOPROV VARCHAR(30) NOT NULL,
  ACTIVO INT
) 

INSERT INTO PROVEEDORES (CVEPROV, NOMPROV, EMPRESA, DIRPROV, DIREMPSA, TELPROV, ESTADO, CODIGOP, LOCALIDAD, CORREOPROV, ACTIVO ) VALUES (1, 'Nueva Merced', 'Nueva Merced','Blvd. Lázaro Cárdenas #611','Blvd. Lázaro Cárdenas #611','353 532 3376','Michoacan','59040', 'La Limonera', 'merced@merced.com', 1);
INSERT INTO PROVEEDORES (CVEPROV, NOMPROV, EMPRESA, DIRPROV, DIREMPSA, TELPROV, ESTADO, CODIGOP, LOCALIDAD, CORREOPROV, ACTIVO ) VALUES (2, 'La Merced', 'La Merced','Blvd. Lázaro Cárdenas #611','Blvd. Lázaro Cárdenas #611','353 532 3125','Michoacan','59040', 'La Limonera', 'lamerced@merced.com', 1);

SELECT * FROM PROVEEDORES

CREATE TABLE CADUCIDAD (
  CVECAD INT PRIMARY KEY,
  FECHACAD DATE NOT NULL
) 

CREATE TABLE PRODUCTOS (
  CVEPROD INT PRIMARY KEY,
  NOMP VARCHAR(30) NOT NULL,
  DESCRIP VARCHAR(60) NOT NULL,
  PRECIOCOMP DECIMAL DEFAULT(0),
  PRECIOVTAP DECIMAL DEFAULT(0),
  EXISTENCIASP INT DEFAULT(0),
  ESTADO INT
) 

INSERT INTO PRODUCTOS (CVEPROD ,NOMP ,DESCRIP ,PRECIOCOMP ,PRECIOVTAP ,EXISTENCIASP ,ESTADO ) VALUES (1000, "Aceite Cristal 1L", "1 Litro de Maiz", 22, 29, 10, 1)
SELECT * FROM PRODUCTOS select MAXVALUE(CVEPROD)  from PRODUCTOS 

CREATE TABLE COMPRAS (
  CVECOMP INT PRIMARY KEY,
  TOTALCOMP DECIMAL DEFAULT(0),
  FECHACOMP DATE DEFAULT(CURRENT_DATE)
) 

CREATE TABLE DETCOMPRV (
  CVECOMP INT,
   CONSTRAINT `fk_detcomprv_compras` FOREIGN KEY (CVECOMP) REFERENCES COMPRAS (CVECOMP),
  CVEPROV INT,
   CONSTRAINT `fk_detcomprv_proveedores` FOREIGN KEY (CVEPROV) REFERENCES PROVEEDORES (CVEPROV)
) 

CREATE TABLE DETCOMPRO (
  CANTCOMP INT NOT NULL,
  CAD DATE NOT NULL,
  PRECOMP DECIMAL NOT NULL,
  LOTE VARCHAR(10),
  GANANCIAP DECIMAL DEFAULT(0),
  CVECOMP INT,
   CONSTRAINT `fk_detcompro_compras` FOREIGN KEY (CVECOMP) REFERENCES COMPRAS (CVECOMP),
  CVEPROD INT,
   CONSTRAINT `fk_detcompro_productos` FOREIGN KEY (CVEPROD) REFERENCES PRODUCTOS (CVEPROD)
) 

CREATE TABLE DETCADPRO (
  LOTE VARCHAR(10) NOT NULL,
  CVECAD INT,
   CONSTRAINT `fk_detcadpro_caducidad` FOREIGN KEY (CVECAD) REFERENCES CADUCIDAD (CVECAD),
  CVEPROD INT,
   CONSTRAINT `fk_detcadpro_productos` FOREIGN KEY (CVEPROD) REFERENCES PRODUCTOS (CVEPROD)
)



////////////////////////////////////////////////////////////////////////
 PROCEDIMIENTO DE ALMACENADO PARA INGRESAR PRODUCTOS CON CVE AUTOMATICA
////////////////////////////////////////////////////////////////////////
 
SELECT * FROM PRODUCTOS
DELETE FROM PRODUCTOS

DROP PROCEDURE IF EXISTS PRODAUTO;
CALL PRODAUTO("ELOTE", "LA COSTENA", 1000, @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE PRODAUTO 
(
	NOM VARCHAR(30),
	DES VARCHAR(60),
	CVE INT, 
	OUT BAN INT
)
BEGIN
	DECLARE CVEP INT;
	IF ((SELECT COUNT(*) FROM PRODUCTOS) = 0) THEN
		SET CVEP = 1000;
	ELSE
		SET CVEP = (SELECT MAX(CVEPROD) FROM PRODUCTOS) + 1;
	END IF;
	IF (NOM = '') THEN
		#PRINT 'EL NOMBRE DEL PRODUCTO NO DEBE DE ESTAR VACIO'
		SET BAN = 1;
	ELSEIF (DES = '') THEN
		#PRINT 'LA DESCRIPCION NO DEBE DE ESTAR VACIA'
		SET BAN = 2;
	ELSEIF (LENGTH(NOM) > 29) THEN
		#PRINT 'EL NOMBRE DEL PRODUCTO EXCEDE LOS 30 CARACTERES'
		SET BAN = 3;
	ELSEIF (LENGTH(DES) > 49) THEN
		#PRINT 'LA DESCRIPCION DEL PRODUCTO EXCEDE LOS 50 CARACTERES'
		SET BAN = 4;
	ELSEIF ((SELECT COUNT(*) FROM PRODUCTOS WHERE NOMP = NOM) > 0) THEN
		#PRINT 'ESTE PRODUCTO YA SE ENCUENTRA REGISTRADO EN LA BASE DE DATOS'
		SET BAN = 5;
	ELSE
		START TRANSACTION;
			INSERT INTO PRODUCTOS (
				 CVEPROD
				,NOMP
				,DESCRIP
				,ESTADO
			)
			VALUES (
				 CVE
				,NOM
				,DES
				,1
			);
		COMMIT;
	END IF;
END; //

DELIMITER ;



////////////////////////////////////////////////////////////////////////
 PROCEDIMIENTO DE ALMACENADO PARA INGRESAR PROVEEDORES CON CVE AUTOMATICA
////////////////////////////////////////////////////////////////////////
 
SELECT * FROM PROVEEDORES 
DELETE FROM PROVEEDORES

DROP PROCEDURE IF EXISTS PROVAUTO;
CALL PROVAUTO("Dona Ceci", "Abarrotes Fenix", "felix 12", "felix 12", "5323126" ,"Michoacan", "59050", "FORESTAL", "donaceci@fenix.com", @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE PROVAUTO
(
	 NOMP VARCHAR(50)
	,EMPR VARCHAR(30)
	,DIRP VARCHAR(50)
	,DIRE VARCHAR(50)
	,TELP VARCHAR(15)
	,ESTA VARCHAR(20)
	,CODI VARCHAR(8)
	,LOCA VARCHAR(30)
	,CORE VARCHAR(30)
	,OUT BAN INT 
)
BEGIN 
	DECLARE CVEP INT;
	IF ((SELECT COUNT(*) FROM PROVEEDORES) = 0) THEN
		SET CVEP = 1;
	ELSE
		SET CVEP = ((SELECT MAX(CVEPROV)FROM PROVEEDORES) + 1);
	END IF;
	IF (NOMP = '') THEN 
		SET BAN = 1;
		#PRINT 'EL NOMBRE DEL PROVEEDOR NO DEBE DE ESTAR VACIO'
	ELSEIF (NOMP REGEXP '%[a-zA-Z]%') THEN
		#PRINT 'El NOMBRE NO DEBE DE TENER CARACTERES NUMERICOS'
		SET BAN = 2;
	ELSEIF (EMPR = '') THEN 
		#PRINT 'lA EMPRESA DEL PROVEEDOR NO DEBE DE ESTAR VACIA'
		SET BAN = 3;
	ELSEIF (DIRE = '') THEN
		#PRINT 'LA DIRECCION DE LA EMPRESA NO DEBE DE ESTAR VACIA'
		SET BAN = 4;
	ELSEIF (TELP = '') THEN
		#PRINT 'EL TELEFONO DEL PROVEEDOR NO DEBE DE ESTAR VACIO'
		SET BAN = 5;
	ELSEIF (TELP REGEXP '%[a-zA-Z]%') THEN
		#PRINT 'EL TELEFONO TIENE LETRAS'
		SET BAN = 6;
	ELSEIF (ESTA = '') THEN 
		#PRINT 'EL ESTADO NO DEBE DE ESTAR VACIO'
		SET BAN = 7;
	ELSEIF (CODI = '') THEN
		#PRINT 'EL CODIGO POSTAL NO DEBE DE ESTAR VACIO'
		SET BAN = 8;
	ELSEIF (CODI REGEXP '%[a-zA-Z]%') THEN 
		#PRINT 'EL CODIGO POSTAL TIENE LETRAS'
		SET BAN = 9;
	ELSEIF (LOCA = '') THEN 
		#PRINT 'LA LOCALIDAD DEBE NO DEBE DE ESTAR VACIA'
		SET BAN = 10;
	ELSEIF (CORE = '') THEN
		#PRINT 'EL CORREO DEL PROVEEDOR NO DEBE DE ESTAR VACIO'
		SET BAN = 11;
	ELSEIF (LENGTH(NOMP) > 49) THEN
		#print 'EL NOMBRE DEL PROVEEDOR EXCEDE LOS 50 CARACTERES'
		SET BAN = 12;
	ELSEIF (LENGTH(EMPR) > 29) THEN
		#print 'EL NOMBRE DE LA EMPRESA EXCEDE LOS 30 CARACTERES'
		SET BAN = 13;
	ELSEIF (LENGTH(DIRP) > 49) THEN 
		#print 'LA DIRECCION DEL PROVEEDOR EXCEDE LOS 50 CARACTERES'
		SET BAN = 14;
	ELSEIF (LENGTH(DIRE) > 49) THEN
		#print 'LA DIRECCION DEL LA EMPRESA EXCEDE LOS 50 CARACTERES'
		SET BAN = 15;
	ELSEIF (LENGTH(TELP) > 14) THEN 
		#print 'LA DIRECCION DEL CLIENTE EXCEDE LOS 15 CARACTERES'
		SET BAN = 16;
	ELSEIF (LENGTH(ESTA) > 19) THEN
		#print 'EL ESTADO DE LA EMPRESA EXCEDE LOS 20 CARACTERES'
		SET BAN = 17;
	ELSEIF (LENGTH(CODI) > 7) THEN 
		#print 'EL CODIGO POSTAL EXCEDE LOS 8 CARACTERES'
		SET BAN = 18;
	ELSEIF (LENGTH(LOCA) > 29) THEN 
		#print 'LA LOCALIDAD DEL PROVEEDOR EXCEDE LOS 30 CARACTERES'
		SET BAN = 19;
	ELSEIF (LENGTH (CORE) > 29) THEN
		#print 'EL CORREO DEL PROVEEDOR EXCEDE LOS 30 CARACTERES'
		SET BAN = 20;
	ELSEIF ((
			SELECT COUNT(*)
			FROM PROVEEDORES
			WHERE NOMPROV = NOMP
				AND EMPRESA = EMPR
				AND DIRPROV = DIRP
				AND DIREMPSA = DIRE
				AND TELPROV = TELP
				AND ESTADO = ESTA
				AND CODIGOP = CODI
				AND LOCALIDAD = LOCA
				AND CORREOPROV = CORE
			) > 0) THEN
		#PRINT 'ESTE PROVEEDOR YA SE ENCUENTRA REGISTRADO EN LA BASE DE DATOS'
		SET BAN = 21;
	ELSE
		START TRANSACTION;
			INSERT INTO PROVEEDORES VALUES 
			(
					 CVEP
					,NOMP
					,EMPR
					,DIRP
					,DIRE
					,TELP
					,ESTA
					,CODI
					,LOCA
					,CORE
					,1 
			);		
		COMMIT;
	END IF; 
END; //

DELIMITER ;



////////////////////////////////////////////////////////////////////////
--			ELIMINACION DE PROVEEDORES
////////////////////////////////////////////////////////////////////////

SELECT * FROM PROVEEDORES 

DROP PROCEDURE IF EXISTS BAJAPROV;
CALL BAJAPROV(4, @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE BAJAPROV(
	 CVEPR INT
	,OUT BAN INT 
)
BEGIN
	IF (CVEPR = '' OR CVEPR = 0) THEN 
		#PRINT 'LA CLAVE DEL PROVEEDOR NO PUEDE ESTAR VACIA'
		SET BAN = 1;
	ELSE 
		IF((SELECT COUNT(*) FROM PROVEEDORES WHERE CVEPROV = CVEPR) > 0) THEN 
			IF ((SELECT COUNT(*) FROM DETCOMPRV WHERE CVEPROV = CVEPR) = 0) THEN  
				START TRANSACTION; 
					DELETE FROM PROVEEDORES WHERE CVEPROV = CVEPR;
				COMMIT;
			ELSE
				#PRINT 'AUN EXISTEN ARTICULOS DISPONIBLES DE ESTE PROVEEDOR'
				SET BAN = 2;
			END IF;
		ELSE
			#PRINT 'LA CLAVE DEL PROVEEDOR NO SE ENCUENTRA REGISTRADA EN LA BASE DE DATOS'
			SET BAN = 3;
		END IF;
	END IF;
END; //

DELIMITER ;

////////////////////////////////////////////////////////////////////////
--			ELIMINACION DE PRODUCTOS
////////////////////////////////////////////////////////////////////////

SELECT * FROM PRODUCTOS 

DROP PROCEDURE IF EXISTS BAJPROD;
CALL BAJPROD(1004, @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE BAJPROD(
	CVEPR INT
	,OUT BAN INT
)
BEGIN 
	IF (CVEPR = '' OR CVEPR = 0) THEN 
		#PRINT 'LA CLAVE DEL PRODUCTO NO PUEDE ESTAR VACIA'
		SET BAN = 1;
	ELSEIF ((SELECT  COUNT (*) FROM PRODUCTOS WHERE CVEPROD = CVEPR) = 1) THEN 
		IF ((SELECT  COUNT (*) FROM DETCOMPRO WHERE CVEPROD = CVEPR) = 0) THEN 
			IF ((SELECT COUNT (*) FROM DETVTAPRO WHERE CVEPROD = CVEPR) = 0) THEN 
				IF ((SELECT  COUNT (*) FROM DETCADPRO WHERE CVEPROD = CVEPR) = 0) THEN
					IF ((SELECT EXISTENCIASP FROM PRODUCTOS WHERE CVEPROD = CVEPR) = 0) THEN 
						START TRANSACTION; 
							DELETE FROM PRODUCTOS WHERE CVEPROD = CVEPR;
						COMMIT;
					ELSE
						#PRINT 'HAY EXISTENCIAS DENTRO DEL PRODUCTO, NO SE PUEDE DAR DE BAJA'
						SET BAN = 2;
					END IF;
				ELSE 
					#PRINT 'EL PRODUCTO TIENE UNA CADUCIDAD ASIGNADA'
					SET BAN = 3;
				END IF;
			ELSE
				#PRINT  'EL PRODUCTO TIENE UNA VENTA ASIGNADA'
				SET BAN = 4;
			END IF;
		ELSE
			#PRINT 'EL PRODUCTO TIENE UNA COMPRA ASIGNADA'
			SET BAN = 5;
		END IF;
	ELSE
		#PRINT 'LA CLAVE DEL PRODUCTO NO EXISTE'
		SET BAN=6;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
--			MODIFICACION DE PROVEEDORES
////////////////////////////////////////////////////////////////////////

SELECT * FROM PROVEEDORES

DROP PROCEDURE IF EXISTS MODPROV;
CALL MODPROV(1,"Donan Ceci", "Abarrotes Fenix", "felix 12", "felix 12", "5323126" ,"Michoacan", "59050", "FORESTAL", "donaceci@fenix.com", @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE MODPROV(
	CVEP INT,
	NOMP VARCHAR(50),
	EMPR VARCHAR(30),
	DIRP VARCHAR(50),
	DIRE VARCHAR(50),
	TELP VARCHAR(15),
	ESTA VARCHAR(20),
	CODI VARCHAR(8),
	LOCA VARCHAR(30),
	CORE VARCHAR(30),
	OUT BAN INT
)
BEGIN
	IF (CVEP = '' OR CVEP = 0) THEN 
		#PRINT 'LA CLAVE DEL PROVEEDOR NO PUEDE ESTAR VACIA'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(*) FROM PROVEEDORES WHERE CVEPROV = CVEP) = 1) THEN 
		START TRANSACTION; 
			UPDATE PROVEEDORES SET 
			NOMPROV = NOMP,
			EMPRESA = EMPR,
			DIRPROV = DIRP,
			DIREMPSA = DIRE,
			TELPROV = TELP,
			ESTADO = ESTA,
			CODIGOP = CODI,
			LOCALIDAD = LOCA,
			CORREOPROV = CORE
			WHERE CVEPROV = CVEP;
		COMMIT;
	ELSE 
		#PRINT 'EL PROVEEDOR ES INEXISTENTE'
		SET BAN = 2;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
--			MODIFICACION DE PRODUCTOS
////////////////////////////////////////////////////////////////////////

SELECT * FROM PRODUCTOS
DROP PROCEDURE IF EXISTS MODPROV;
CALL MODDESPROD(1000,"ELOTE", "LA COSTENA", @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE MODDESPROD(
	 CVEPR INT
	,NOMB VARCHAR (30) 
	,DESPN VARCHAR (60)
	,OUT BAN INT
)
BEGIN
	IF (CVEPR = 0 OR CVEPR = '') THEN 
		#PRINT 'LA CVE DEL PRODUCTO NO DEBE DE ESTAR VACIA'
		SET BAN = 1;
	ELSEIF (NOMB = '') THEN 
		#PRINT 'EL NOMBRE NO PUEDE ESTAR VACIA'
		SET BAN = 2;
	ELSEIF (DESPN = '') THEN 
		#PRINT 'LA DESCRPICION NO PUEDE ESTAR VACIA'
		SET BAN = 3;
	ELSEIF ((SELECT COUNT (*) FROM PRODUCTOS WHERE CVEPROD = CVEPR) = 1) THEN 
		START TRANSACTION; 
			UPDATE PRODUCTOS SET NOMP = NOMB, DESCRIP = DESPN WHERE CVEPROD = CVEPR;
		COMMIT;
	ELSE
		#PRINT 'ESTE PRODUCTO NO SE ENCUENTRA REGISTRADO EN LA BD'
		SET BAN = 4;
	END IF;
END; //

DELIMITER ;



////////////////////////////////////////////////////////////////////////
 		PROCEDIMIENTO DE ALMACENADO PARA INGRESAR CADUCIDADES
////////////////////////////////////////////////////////////////////////
 
SELECT * FROM CADUCIDAD 
DELETE FROM CADUCIDAD

DROP PROCEDURE IF EXISTS CADAUTO;
CALL CADAUTO("2020/08/14", @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE CADAUTO (
		FECHA DATE
		,OUT BAN INT
)
BEGIN
	DECLARE CVECA INT;
	IF ((SELECT COUNT(*) FROM CADUCIDAD) = 0) THEN 
		SET CVECA = 1;
	ELSE
		SET CVECA = ((SELECT MAX(CVECAD) FROM CADUCIDAD) + 1);
	END IF;
	IF (FECHA = '') THEN 
		#PRINT 'LA FECHA DE CADUCIDAD NO DEBE ESTAR VACIA'
		SET BAN = 1;
	ELSEIF (FECHA <= CURDATE()) THEN
		#PRINT 'LA FECHA DE CADUCIDAD DEBE SER MAYOR A LA FECHA DE HOY'
		SET BAN = 2;
	ELSEIF ((SELECT COUNT(*) FROM CADUCIDAD WHERE FECHACAD = FECHA) > 0) THEN
		#PRINT 'ESTA CADUCIDAD YA SE ENCUENTRA REGISTRADA'
		SET BAN = 3;
	ELSE
		START TRANSACTION;
			INSERT INTO CADUCIDAD(CVECAD,FECHACAD) VALUES (CVECA,FECHA);			
		COMMIT;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
PROCEDIMINETO PARA INGRESAR COMPRAS Y SU DETALLE ENTRE PROVEEDORES MANUAL
////////////////////////////////////////////////////////////////////////
 
SELECT * FROM DETCOMPRV
SELECT * FROM COMPRAS
SELECT * FROM PROVEEDORES

DELETE FROM DETCOMPRV 

DROP PROCEDURE IF EXISTS COMAUTO;
CALL COMAUTO(1, @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE COMAUTO (
	 CVEPRO INT
	,OUT BAN INT  
)
BEGIN
	DECLARE CVECO INT;
	IF ((SELECT COUNT(*)FROM COMPRAS) = 0) THEN 
		SET CVECO = 1;
	ELSE
		SET CVECO = ((SELECT MAX(CVECOMP)FROM COMPRAS) + 1);
	END IF;
	IF (CVEPRO = '' OR CVEPRO = 0) THEN 
		#PRINT 'LA CLAVE NO DEBE ESTAR VACÍA O SER 0'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(CVEPROV) FROM PROVEEDORES WHERE CVEPROV = CVEPRO) = 0) THEN
		#PRINT 'LA CLAVE DEL PROVEEDOR NO EXISTE'
		SET BAN = 2;
	ELSEIF ((SELECT ACTIVO FROM PROVEEDORES WHERE CVEPROV = CVEPRO) = 0) THEN
		#PRINT 'ESTE PROVEEDOR ESTA INACTIVO O DADO DE BAJA'
		SET BAN = 3;
	ELSE
		START TRANSACTION;
			INSERT INTO COMPRAS(CVECOMP)VALUES (CVECO);
			INSERT INTO DETCOMPRV(CVECOMP,CVEPROV) VALUES (CVECO,CVEPRO);
		COMMIT;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
PROCEDIMIENTO DE ALAMCENADO PARA INGRESAR DETALLES ENTRE PRODUCTOS Y COMPRAS ASI COMO SI TIENE UNA CADUCIDAD EN COMUN
////////////////////////////////////////////////////////////////////////
 
SELECT * FROM COMPRAS
SELECT * FROM PRODUCTOS
SELECT CVEPROD,NOMP FROM PRODUCTOS
SELECT * FROM DETCOMPRO
SELECT * FROM CADUCIDAD
SELECT * FROM DETCADPRO

DELETE FROM DETCPROD 
DELETE FROM COMPRAS

CALL DETCPROD (1, 1000 , 10, '2021-11-01', 20, 22 ,'4545', @lol);

DROP PROCEDURE IF EXISTS DETCPROD;
CALL DETCPROD(1, @m);

DELIMITER //

CREATE OR REPLACE PROCEDURE DETCPROD (
	 CVECO INT
	,CVEPR INT
	,CANTC INT
	,CADUC DATE
	,PRECO DECIMAL
	,PREVE DECIMAL
	,LOTES VARCHAR(10)
	,OUT BAN INT
)
BEGIN
	DECLARE AUX INT;
	SET AUX = (SELECT CVECAD FROM CADUCIDAD WHERE FECHACAD = CADUC);
	IF (CVECO = '' OR CVECO = 0) THEN 
		#PRINT 'LA CLAVE DE COMPRA NO DEBE DE ESTAR VACIA O SER 0'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(*) FROM COMPRAS WHERE CVECOMP = CVECO) = 0) THEN 
		#PRINT 'LA CLAVE DE COMPRA NO EXISTE'
		SET BAN = 2;
	ELSEIF (CVEPR = '') THEN 
		#PRINT 'LA CLAVE DEL PRODUCTO ESTA VACIA'
		SET BAN = 3;
	ELSEIF ((SELECT COUNT(*) FROM PRODUCTOS WHERE CVEPROD = CVEPR) = 0) THEN
		#PRINT 'LA CLAVE DEL PRODUCTO NO EXISTE'
		SET BAN = 4;
	ELSEIF (CANTC = '' OR CANTC < 1) THEN 
		#PRINT 'LA CANTIDAD COMPRADA ESTA VACIA O ES INFERIOR A 1'
		SET BAN = 5;
	ELSEIF (CADUC = '') THEN 
		#PRINT 'LA FECHA DE CAD DEL PRODUCTO NO DEBE DE ESTAR VACIA'
		SET BAN = 6;
	ELSEIF (CADUC <= CURDATE()) THEN 
		#PRINT 'LA FECHA DE CAD DEL PRODUCTO YA CADUCO O ESTA PROXIMO A CADUCAR'
		SET BAN = 7;
	ELSEIF (PRECO = '' OR PRECO < 1) THEN
		#PRINT 'EL PRECIO DE COMPRA NO DEBE DE ESTAR VACIO NI CERO'
		SET BAN = 8;
	ELSEIF (PREVE = '' OR PREVE < 1) THEN
		#PRINT 'EL PRECIO DE VENTA NO DEBE DE ESTAR VACIO NI CERO'
		SET BAN = 9;
	ELSEIF (LOTES = '') THEN 
		#PRINT 'EL LOTE NO DEBE DE ESTAR VACIO'
		SET BAN = 10;
	ELSEIF (LENGTH(LOTES) > 10) THEN 
		#PRINT 'EL LOTE EXCEDE LOS 10 CARACTERES'
		SET BAN = 11;
	ELSEIF ((SELECT COUNT(*) FROM DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR) > 0) THEN
		IF ((SELECT COUNT(*) FROM DETCADPRO WHERE CVECAD = (SELECT CVECAD FROM CADUCIDAD WHERE FECHACAD = CADUC) AND CVEPROD = CVEPR AND LOTE = LOTES) > 0) THEN		
			UPDATE PRODUCTOS SET PRECIOCOMP = PRECO WHERE CVEPROD = CVEPR;
			UPDATE PRODUCTOS SET PRECIOVTAP = PREVE WHERE CVEPROD = CVEPR;
			UPDATE DETCOMPRO SET CANTCOMP = CANTCOMP + CANTC WHERE CVECOMP = CVECO AND CVEPROD = CVEPR;
			UPDATE PRODUCTOS SET EXISTENCIASP = EXISTENCIASP + CANTC WHERE CVEPROD = CVEPR;
			UPDATE COMPRAS SET TOTALCOMP = TOTALCOMP + (PRECO * CANTC) WHERE CVECOMP = CVECO;
		ELSE 
			UPDATE PRODUCTOS SET PRECIOCOMP = PRECO WHERE CVEPROD = CVEPR;
			UPDATE PRODUCTOS SET PRECIOVTAP = PREVE WHERE CVEPROD = CVEPR;
			UPDATE DETCOMPRO SET CANTCOMP = CANTCOMP + CANTC WHERE CVECOMP = CVECO AND CVEPROD = CVEPR;
			UPDATE PRODUCTOS SET EXISTENCIASP = EXISTENCIASP + CANTC WHERE CVEPROD = CVEPR;
			UPDATE COMPRAS SET TOTALCOMP = TOTALCOMP + (PRECO * CANTC) WHERE CVECOMP = CVECO;
			IF ((SELECT COUNT(FECHACAD) FROM CADUCIDAD WHERE FECHACAD = CADUC) = 1) THEN
				START TRANSACTION;		
					CALL DETCAPROD(AUX,CVEPR,LOTES,BAN);
				COMMIT;	
			ELSE 
				START TRANSACTION;	
					CALL CADAUTO(CADUC,BAN);
					SET AUX = (SELECT CVECAD FROM CADUCIDAD WHERE FECHACAD = CADUC);
					CALL DETCAPROD(AUX,CVEPR,LOTES,BAN); 
				COMMIT;	
			END IF;
		END IF;
	ELSE
		START TRANSACTION;		
			INSERT INTO DETCOMPRO(CVECOMP,CVEPROD,CANTCOMP,CAD,PRECOMP,LOTE,GANANCIAP) VALUES(CVECO,CVEPR,CANTC,CADUC,PRECO,LOTES,(PREVE-PRECO));
			UPDATE PRODUCTOS SET PRECIOCOMP = PRECO WHERE CVEPROD = CVEPR;
			UPDATE PRODUCTOS SET PRECIOVTAP = PREVE WHERE CVEPROD = CVEPR;
			UPDATE PRODUCTOS SET EXISTENCIASP = EXISTENCIASP + CANTC WHERE CVEPROD = CVEPR;
			UPDATE COMPRAS SET TOTALCOMP = TOTALCOMP + (PRECO * CANTC) WHERE CVECOMP = CVECO;
			IF ((SELECT COUNT(FECHACAD) FROM CADUCIDAD WHERE FECHACAD = CADUC) = 1) THEN
				CALL DETCAPROD(AUX,CVEPR,LOTES,BAN);
			ELSE  
				CALL CADAUTO(CADUC,BAN);
				SET AUX = (SELECT CVECAD FROM CADUCIDAD WHERE FECHACAD = CADUC);
				CALL DETCAPROD(AUX,CVEPR,LOTES,BAN); 
			END IF;
		COMMIT;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
PROCEDIMIENTO PARA DETALLE ENTRE PRODUCTOS Y CADUCIDADES CON CVE AUTOMATICA	
////////////////////////////////////////////////////////////////////////
 
DELETE FROM CADUCIDAD 
DELETE FROM PRODUCTOS 
DELETE FROM DETCADPRO 

SELECT * FROM DETCADPRO  
SELECT * FROM CADUCIDAD 
SELECT * FROM PRODUCTOS 

CALL DETCAPROD(1, @m);
DROP PROCEDURE IF EXISTS DETCAPROD;

DELIMITER //

CREATE OR REPLACE PROCEDURE DETCAPROD (
	 CVECA INT
	,CVEPR INT
	,LOTES VARCHAR(10)
	,OUT BAN INT
)
BEGIN 
	IF (CVECA = '' OR CVECA < 1) THEN 
		#PRINT 'La clave de la caducidad esta vacia o se encuentra en 0'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(CVECAD) FROM CADUCIDAD WHERE CVECAD = CVECA) = 0 ) THEN 
		#PRINT 'LA CVE DE LA CADUCIDAD NO EXISTE'
		SET BAN = 2;
	ELSEIF (CVEPR = '' OR CVEPR < 1) THEN 
		#PRINT 'La clave del producto esta vacia o se encuentra en 0'
		SET BAN = 3;
	ELSEIF ((SELECT COUNT(CVEPROD) FROM PRODUCTOS WHERE CVEPROD = CVEPR) = 0) THEN 
		#PRINT 'LA CVE DEL PRODUCTO NO EXISTE'
		SET BAN = 4;
	ELSEIF (LOTES = '') THEN
		#PRINT 'EL LOTE NO DEBE DE ESTAR VACIO'
		SET BAN = 5;
	ELSEIF (LENGTH(LOTES) > 10) THEN 
		#PRINT 'EL LOTE EXCEDE LOS 10 CARACTERES'
		SET BAN = 6;
	ELSEIF ((SELECT COUNT(*) FROM DETCADPRO WHERE CVECAD = CVECA AND CVEPROD = CVEPR AND LOTE = LOTES) > 0) THEN 
		#PRINT 'LAS CLAVES YA HAN SIDO INGESADAS EN OTRO DETALLE' 
		SET BAN = 7;
	ELSE
		START TRANSACTION;		
			INSERT INTO DETCADPRO(CVECAD,CVEPROD,LOTE) VALUES (CVECA, CVEPR, LOTES);
		COMMIT;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
							BAJA CADUCIDAD
////////////////////////////////////////////////////////////////////////

SELECT * FROM DETCOMPRO 
SELECT * FROM CADUCIDAD

DELIMITER //

CALL BAJACADU(1, @m);
DROP PROCEDURE IF EXISTS BAJACADU;

CREATE OR REPLACE PROCEDURE BAJACADU(
	 CVECA INT
	,FECHA DATE
	,OUT BAN INT
)
BEGIN 
	IF ((SELECT COUNT(*) FROM CADUCIDAD WHERE CVECAD = CVECA AND FECHACAD = FECHA) > 0) THEN 
		IF ((SELECT COUNT(*) FROM DETCADPRO WHERE CVECAD = CVECA) = 0) THEN
			START TRANSACTION;	
				DELETE FROM CADUCIDAD WHERE CVECAD = CVECA AND FECHACAD = FECHA;
			COMMIT;
		ELSE 
			#PRINT 'ESTA CADUCIDAD TIENE VENTAS COMPRAS' 
			SET BAN = 1;
		END IF;
	ELSE 
		#PRINT 'ESTA CLAVE DE CADUCIDAD ES INEXISTENTE' 
		SET BAN = 2;
	END IF;
END; //

DELIMITER ;

////////////////////////////////////////////////////////////////////////
 			         BAJA DETALLE COM-PRO
////////////////////////////////////////////////////////////////////////
SELECT * FROM DETCOMPRO 
SELECT * FROM DETCADPRO
SELECT * FROM PRODUCTOS

CALL BAJADETCOMPRO(1, @m);
DROP PROCEDURE IF EXISTS BAJADETCOMPRO;

DELIMITER //;

CREATE OR REPLACE PROCEDURE BAJADETCOMPRO(
	CVECO INT,
	CVEPR INT,
	OUT BAN INT
)
BEGIN
	DECLARE CANTC INT;
	DECLARE CVECA INT;
	DECLARE FECHA DATE;
	DECLARE AUX DECIMAL;
	IF ((SELECT COUNT(*) FROM DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR) > 0) THEN  
		SET CANTC = (SELECT CANTCOMP FROM DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR);
		IF ((SELECT EXISTENCIASP FROM PRODUCTOS WHERE CVEPROD = CVEPR) >= CANTC) THEN  
			START TRANSACTION;
				SET AUX = (SELECT PRECOMP FROM  DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR);
				UPDATE PRODUCTOS SET EXISTENCIASP = (EXISTENCIASP - CANTC) WHERE CVEPROD = CVEPR;
				UPDATE COMPRAS SET TOTALCOMP = (TOTALCOMP - (CANTC * AUX)) WHERE CVECOMP = CVECO;
				SET CVECA = (SELECT CVECAD FROM CADUCIDAD WHERE FECHACAD = (SELECT CAD FROM DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR));
				SET FECHA = (SELECT CAD FROM DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR);
				DELETE FROM DETCADPRO WHERE CVECAD = CVECA AND CVEPROD = CVEPR;
				CALL BAJACADU(CVECA, FECHA, BAN);
				DELETE FROM DETCOMPRO WHERE CVECOMP = CVECO AND CVEPROD = CVEPR;
			COMMIT;
		ELSE
			#PRINT 'EXISTENCIAS INSUFICIENTES'
			SET BAN = 1;
		END IF;
	ELSE 
		#PRINT 'ESE DETALLE NO EXISTE'
		SET BAN = 2;
	END IF;
END; //

DELIMITER ;

////////////////////////////////////////////////////////////////////////
 						BAJA COMPRAS
////////////////////////////////////////////////////////////////////////

SELECT * FROM COMPRAS
SELECT * FROM CADUCIDAD
SELECT * FROM DETCADPRO
SELECT * FROM PRODUCTOS
SELECT * FROM DETCOMPRO
CALL BAJACOMPRAS(1,@elmer)

SELECT COMPRAS.CVECOMP, COMPRAS.TOTALCOMP, DETCOMPRO.CVEPROD, DETCOMPRO.CANTCOMP, DETCOMPRO.PRECOMP FROM COMPRAS INNER JOIN DETCOMPRO ON COMPRAS.CVECOMP = DETCOMPRO.CVECOMP WHERE COMPRAS.CVECOMP = 1
SELECT TOTALCOMP FROM COMPRAS WHERE CVECOMP = 1
DELIMITER //

CREATE OR REPLACE PROCEDURE  BAJACOMPRAS (
	 CVECO INT
	,OUT BAN INT
)
BEGIN
	DECLARE CUANT INT;
	DECLARE CLAVE INT;
	IF ((SELECT COUNT(*) FROM COMPRAS WHERE CVECOMP = CVECO) > 0) THEN 
		IF ((SELECT COUNT(*) FROM DETCOMPRO WHERE CVECOMP = CVECO) > 0) THEN 
			SET CUANT = (SELECT COUNT(*) FROM DETCOMPRO WHERE CVECOMP = CVECO);
			IF (CUANT > 0) THEN
				START TRANSACTION;
					WHILE CUANT > 0 DO 
						SET CLAVE = (SELECT MAX(CVEPROD) FROM DETCOMPRO WHERE CVECOMP = CVECO);
						CALL BAJADETCOMPRO(CVECO, CLAVE, BAN);
						IF ((SELECT MAX(CVEPROD) FROM DETCOMPRO WHERE CVECOMP = CVECO) = CLAVE) THEN
							SET CUANT = 0;
						ELSE
							SET CUANT = CUANT - 1;
						END IF; 
					END WHILE;
				COMMIT;
				IF ((SELECT COUNT(*) FROM DETCOMPRO WHERE CVECOMP = CVECO) = 0) THEN 
					START TRANSACTION;
						DELETE FROM DETCOMPRV WHERE CVECOMP = CVECO;
						DELETE FROM COMPRAS WHERE CVECOMP = CVECO;
					COMMIT;
				END IF;
			ELSE 
				START TRANSACTION;
					DELETE FROM DETCOMPRV WHERE CVECOMP = CVECO;
					DELETE FROM COMPRAS WHERE CVECOMP = CVECO;
				COMMIT;
			END IF;
		ELSE 
			START TRANSACTION;
				DELETE FROM DETCOMPRV WHERE CVECOMP = CVECO;
				DELETE FROM COMPRAS WHERE CVECOMP = CVECO;
			COMMIT;
		END IF;
	ELSE 
		#PRINT 'COMPRA INEXISTENTE'
		SET BAN = 1;
	END IF;
END; //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
PROCEDIMIENTO DETALLES ENTRE VENTAS Y PRODUCTOS COMO SUS RESPECTIVAS MODIFICACIONES
///////////////////////////////////////////////////////////////////SELECT * FROM PRODUCTOS 
/////
 
SELECT * FROM PRODUCTOS 
SELECT * FROM DETVTAPRO 
SELECT * FROM VENTAS 
SELECT * FROM DETVTAEMP 

CALL DETVPRO 1,1,0

DELIMITER // 

CREATE OR REPLACE PROCEDURE DETVPRO (
	 CVEV INT
	,CVEP INT
	,CANT INT
	,OUT BAN INT
)
BEGIN 
	IF (CVEV = '') THEN 
		#PRINT 'LA CVE DE LA VENTA ESTA VACIA'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(CVEVTA) FROM VENTAS WHERE CVEVTA = CVEV) = 0) THEN 
		#PRINT 'LA CVE DE LA VENTA NO EXISTE, MODIFICALA'
		SET BAN = 2;
	ELSEIF (CVEP = '') THEN 
		#PRINT 'LA CVE DEL PRODUCTO NO DEBE ESTAR VACIA'
		SET BAN = 3;
	ELSEIF ((SELECT COUNT(CVEP) FROM PRODUCTOS WHERE CVEPROD = CVEP) = 0) THEN 
		#PRINT 'LA CVE DEL PRODUCTO NO EXISTE, MODIFICALA'
		SET BAN = 4;
	ELSEIF (CANT = '' OR CANT < 1) THEN 
		#PRINT 'LA CANTIDAD VENDIDA ESTA VACIA O ES MENOR A 1'
		SET BAN = 5;
	ELSEIF ((SELECT ESTADO FROM PRODUCTOS WHERE CVEPROD = CVEP) = 0) THEN 
		#PRINT 'ESTE PRODUCTO HA SIDO DADO DE BAJA'
		SET BAN = 6;
	ELSEIF ((SELECT COUNT(*) FROM DETVTAPRO WHERE CVEPROD = CVEP AND CVEVTA = CVEV) > 0) THEN 
		IF ((SELECT EXISTENCIASP FROM PRODUCTOS WHERE CVEPROD = CVEP) >= CANT) THEN 
			START TRANSACTION;
				UPDATE DETVTAPRO SET CANTVP = (CANTVP + CANT) WHERE CVEPROD = CVEP AND CVEVTA = CVEV;
				UPDATE PRODUCTOS SET EXISTENCIASP = EXISTENCIASP - CANT WHERE CVEPROD = CVEP;
				UPDATE VENTAS SET SUBTOTAL = (SUBTOTAL + (CANT * (SELECT PRECIOVTAP FROM PRODUCTOS WHERE CVEPROD = CVEP)) * 1) WHERE CVEVTA = CVEV;
				UPDATE VENTAS SET FORAHORRO = (FORAHORRO + (CANT * (SELECT PRECIOCOMP FROM PRODUCTOS WHERE CVEPROD = CVEP)) * 1) WHERE CVEVTA = CVEV;
				#UPDATE VENTAS SET IVA = (IVA + (CANT * (SELECT PRECIOVTAP FROM PRODUCTOS WHERE CVEPROD = CVEP)) * .16) WHERE CVEVTA = CVEV;
			COMMIT;
		ELSE
			#PRINT ('LA CANTIDAD SOLICITADA EXCEDE LAS EXISTENCIAS DE ESTE PRODUCTO')
			SET BAN = 7;
		END IF;
	ELSE
		IF ((SELECT EXISTENCIASP FROM PRODUCTOS WHERE CVEPROD = CVEP) >= CANT) THEN 
			START TRANSACTION;
				INSERT INTO DETVTAPRO (CVEVTA,CVEPROD,PREVENDIDOP,PRECOMPP,CANTVP) VALUES (CVEV, CVEP,(SELECT PRECIOVTAP FROM PRODUCTOS WHERE CVEPROD = CVEP),(SELECT PRECIOCOMP FROM PRODUCTOS WHERE CVEPROD = CVEP), CANT);
				UPDATE PRODUCTOS SET EXISTENCIASP = EXISTENCIASP - CANT WHERE CVEPROD = CVEP;
				UPDATE VENTAS SET SUBTOTAL = (SUBTOTAL + (CANT * (SELECT PRECIOVTAP FROM PRODUCTOS WHERE CVEPROD = CVEP)) * 1) WHERE CVEVTA = CVEV;
				UPDATE VENTAS SET FORAHORRO = (FORAHORRO + (CANT * (SELECT PRECIOCOMP FROM PRODUCTOS WHERE CVEPROD = CVEP)) * 1) WHERE CVEVTA = CVEV;
				#UPDATE DETVTAPRO SET TOTALPROD = ((SELECT CANTVP FROM DETVTAPRO WHERE CVEPROD = CVEP AND CVEVTA = CVEV)*(SELECT PRE FROM DETVTAPRO WHERE CVEPROD = CVEP AND CVEVTA = CVEV)) DETCOMPRO.CANTCOMP*DETCOMPRO.PRECOMP
				#UPDATE VENTAS SET IVA = (IVA + (CANT * (SELECT PRECIOVTAP FROM PRODUCTOS WHERE CVEPROD = CVEP)) * .16) WHERE CVEVTA = CVEV;
			COMMIT;	
		ELSE
			#PRINT ('LA CANTIDAD SOLICITADA EXCEDE LAS EXISTENCIAS DE ESTE PRODUCTO')
			SET BAN = 8;
		END IF;
	END IF;
END;  //

DELIMITER ;


////////////////////////////////////////////////////////////////////////
PROCEDIMIENTO DE ALMACENADO PARA VENTAS CON CVE AUTOMATICA
////////////////////////////////////////////////////////////////////////

SELECT * FROM VENTAS
SELECT * FROM DETVTAEMP
SELECT * FROM EMPLEADOS

VTAUTO 'EFECTIVO', ''

DELIMITER //

CREATE OR REPLACE PROCEDURE VTAUTO ( 
	CVEM INT
	,OUT BAN INT 
)
BEGIN 
	DECLARE CVEV INT;
	IF ((SELECT COUNT(*)	FROM VENTAS) = 0) THEN 
		SET CVEV = 100;
	ELSE
		SET CVEV = ((SELECT MAX(CVEVTA) FROM VENTAS) + 1);
	END IF;
	IF (CVEM = '') THEN
		#PRINT 'LA CVE DEL EMPLEADO ESTA VACIA'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(CVEMP) FROM EMPLEADOS WHERE CVEMP = CVEM) = 0) THEN 
		#PRINT 'LA CVE DEL EMPLEADO NO EXISTE'
		SET BAN = 2;
	ELSEIF ((SELECT ACTIVO FROM EMPLEADOS WHERE CVEMP = CVEM) = 0) THEN 
		#PRINT 'ESTE EMPLEADO SE ENCUENTRA DADO DE BAJA'
		SET BAN = 3;
	ELSEIF ((SELECT PUESTO FROM EMPLEADOS WHERE CVEMP = CVEM ) != 'ADMINISTRADOR') THEN 
		#PRINT 'LAS VENTAS SOLO PUEDEN SER COBRADAS POR LOS CAJEROS, ENC. DE TIENDA O ADMINISTRADORES'
		SET BAN = 4;
	ELSE
		START TRANSACTION;
			INSERT INTO VENTAS (CVEVTA) VALUES (CVEV);
			INSERT INTO DETVTAEMP (CVEVTA,CVEMP) VALUES (CVEV,CVEM);
		COMMIT;
	END IF;
END; //

DELIMITER ;

////////////////////////////////////////////////////////////////////////
--PROCEDIMENTO DE ALAMACENADO PARA ELIMNAR VENTAS
////////////////////////////////////////////////////////////////////////

SELECT * FROM VENTAS
SELECT * FROM DETVTAEMP
SELECT * FROM DETVTAPRO 
SELECT * FROM PRODUCTOS 
CALL BAJAVTAS(100,@ASD) 

DELIMITER //

CREATE OR REPLACE PROCEDURE BAJAVTAS (
	CVEV INT
	,OUT BAN INT
)
BEGIN 
	DECLARE CUANTOS INT;
	DECLARE CLAVE INT;
	IF (CVEV = 0 OR CVEV = '') THEN 
		#PRINT 'LA CVE DE LA VENTA SE ENCUENTRA VACIA'
		SET BAN = 1;
	ELSEIF ((SELECT COUNT(*) FROM VENTAS WHERE CVEVTA = CVEV) = 0) THEN 
		#PRINT 'LA CVE DE LA VENTA NO EXISTE'
		SET BAN = 2;
	ELSE 
		IF ((SELECT COUNT(*) FROM DETVTAPRO WHERE CVEVTA = CVEV) > 0) THEN
			SET CUANTOS = (SELECT COUNT(*) FROM DETVTAPRO WHERE CVEVTA = CVEV);
			IF (CUANTOS > 0) THEN 
				START TRANSACTION;
					WHILE CUANTOS > 0 DO 
						SET CLAVE = (SELECT MAX (CVEPROD) FROM DETVTAPRO WHERE CVEVTA = CVEV);
						CALL BAJADETPROD (CVEV, CLAVE);
						IF ((SELECT MAX(CVEPROD) FROM DETVTAPRO WHERE CVEVTA = CVEV) = CLAVE) THEN 
							SET CUANTOS = 0;
						ELSE 
							SET CUANTOS = CUANTOS - 1;
						END IF;
					END	WHILE;
				COMMIT;
				IF ((SELECT COUNT(*) FROM DETVTAPRO WHERE CVEVTA = CVEV) = 0) THEN 
					START TRANSACTION;
						DELETE FROM DETVTAEMP WHERE CVEVTA = CVEV;
						DELETE FROM VENTAS WHERE CVEVTA = CVEV;
					COMMIT;
				END IF;
			ELSE 
				START TRANSACTION;
					DELETE FROM DETVTAEMP WHERE CVEVTA = CVEV;
					DELETE FROM VENTAS WHERE CVEVTA = CVEV;
				COMMIT;
			END IF;
		ELSE 
			START TRANSACTION;
				DELETE FROM DETVTAEMP WHERE CVEVTA = CVEV;
				DELETE FROM VENTAS WHERE CVEVTA = CVEV;
			COMMIT;
		END IF;
	END IF;
END; //
				
DELIMITER ;


////////////////////////////////////////////////////////////////////////
 --BAJA DE DETALLE ENTRE VENTAS Y PROD
 ////////////////////////////////////////////////////////////////////////
SELECT * FROM VENTAS
SELECT * FROM DETVTAEMP
SELECT * FROM DETVTAPRO 
SELECT * FROM PRODUCTOS 

DELIMITER //

CREATE OR REPLACE PROCEDURE BAJADETPROD (
	 CVEV INT
	,CVEP INT
)
BEGIN
	DECLARE CANT INT;
	DECLARE AUX DECIMAL;
	DECLARE AUX2 DECIMAL;
	IF ((SELECT CVEPROD FROM DETVTAPRO WHERE CVEPROD = CVEP AND CVEVTA = CVEV) = CVEP) THEN 
		SET CANT = (SELECT CANTVP FROM DETVTAPRO WHERE CVEVTA = CVEV AND CVEPROD = CVEP);
		SET AUX = (SELECT PREVENDIDOP FROM DETVTAPRO WHERE CVEVTA = CVEV AND CVEPROD = CVEP);
		SET AUX2 = (SELECT PRECOMPP FROM DETVTAPRO WHERE CVEVTA = CVEV AND CVEPROD = CVEP);
		START TRANSACTION;
			UPDATE PRODUCTOS SET EXISTENCIASP = (EXISTENCIASP + CANT) WHERE CVEPROD = CVEP;
			UPDATE VENTAS SET SUBTOTAL = (SUBTOTAL - (CANT * AUX) *1) WHERE CVEVTA = CVEV;
			UPDATE VENTAS SET FORAHORRO = (FORAHORRO - (CANT * AUX2) *1) WHERE CVEVTA = CVEV;
			#UPDATE VENTAS SET IVA = (IVA - (CANT * AUX) * .16) WHERE CVEVTA = CVEV;
			DELETE FROM DETVTAPRO WHERE CVEVTA = CVEV AND CVEPROD = CVEP;
		COMMIT;
	END IF;
END; //
 
DELIMITER ;
